{"version":3,"sources":["images/design-web.jpg","images/design-resi.jpg","images/archviz.jpg","images/photography.jpg","components/Carousel.js","components/Navbar.js","components/Footer.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","CarouselPage","activeItem","length","showControls","showIndicators","className","itemId","src","require","alt","overlay","NavbarPage","state","collapseID","toggleCollapse","setState","prevState","color","light","expand","onClick","this","id","isOpen","navbar","right","to","icon","nav","caret","href","Component","FooterPage","fluid","target","Date","getFullYear","App","Fragment","Navbar","Carousel","Footer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.289dfa37.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/design-web.8689d7a1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/design-resi.e856caeb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/archviz.ef23b4ab.jpg\";","module.exports = __webpack_public_path__ + \"static/media/photography.6429a8f4.jpg\";","import React from \"react\";\nimport { MDBCarousel, MDBCarouselCaption, MDBCarouselInner, MDBCarouselItem, MDBView, MDBMask } from\n\"mdbreact\";\n// import WebDesignImg from \"../../public/images/design-web.jpg\"\n\nconst CarouselPage = () => {\n  return (\n      <MDBCarousel\n      activeItem={1}\n      length={4}\n      showControls={true}\n      showIndicators={true}\n      className=\"z-depth-1\"\n    >\n      <MDBCarouselInner>\n        <MDBCarouselItem itemId=\"1\">\n          <MDBView>\n            <img\n              className=\"d-block w-100\"\n              src={require(\"../images/design-web.jpg\")}\n              alt=\"Design.Web slide\"\n            />\n          <MDBMask overlay=\"black-light\" />\n          </MDBView>\n          <MDBCarouselCaption>\n            <h3 className=\"h3-responsive\">&lt;Design . Web /&gt;</h3>\n            <p>UI/UX Web Design to Full stack Web Development</p>\n          </MDBCarouselCaption>\n        </MDBCarouselItem>\n        <MDBCarouselItem itemId=\"2\">\n          <MDBView>\n            <img\n              className=\"d-block w-100\"\n              src={require(\"../images/design-resi.jpg\")}\n              alt=\"Residential Design slide\"\n            />\n          <MDBMask overlay=\"black-strong\" />\n          </MDBView>\n          <MDBCarouselCaption>\n            <h3 className=\"h3-responsive\">Residential Designs</h3>\n            <p>Display Home or Client Home Designs</p>\n          </MDBCarouselCaption>\n        </MDBCarouselItem>\n        <MDBCarouselItem itemId=\"3\">\n          <MDBView>\n            <img\n              className=\"d-block w-100\"\n              src={require(\"../images/archviz.jpg\")}\n              alt=\"Archviz slide\"\n            />\n          <MDBMask overlay=\"black-slight\" />\n          </MDBView>\n          <MDBCarouselCaption>\n            <h3 className=\"h3-responsive\">Archviz</h3>\n            <p>Architectural 3D Photorealistic renderings & flythroughs</p>\n          </MDBCarouselCaption>\n        </MDBCarouselItem>\n        <MDBCarouselItem itemId=\"4\">\n          <MDBView>\n            <img\n              className=\"d-block w-100\"\n              src={require(\"../images/photography.jpg\")}\n              alt=\"Photography slide\"\n            />\n          <MDBMask overlay=\"black-slight\" />\n          </MDBView>\n          <MDBCarouselCaption>\n            <h3 className=\"h3-responsive\">Photography</h3>\n            <p>Travel, Journalistic & Event Photography</p>\n          </MDBCarouselCaption>\n        </MDBCarouselItem>\n      </MDBCarouselInner>\n    </MDBCarousel>\n  );\n}\n\nexport default CarouselPage;","import React, { Component } from \"react\";\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBDropdown,\nMDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem, MDBIcon } from \"mdbreact\";\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nclass NavbarPage extends Component {\n    state = {\n    collapseID: \"\"\n    };\n\n    toggleCollapse = collapseID => () =>\n    this.setState(prevState => ({\n    collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\n    }));\n\n    render() {\n        return (\n            <Router>\n                <MDBNavbar color=\"white\" light expand=\"md\">\n                    <MDBNavbarBrand>\n                    <strong className=\"black-text\">Rommel Jay San Jose</strong>\n                    </MDBNavbarBrand>\n                    <MDBNavbarToggler onClick={this.toggleCollapse(\"navbarCollapse3\")} />\n                    <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.collapseID} navbar>\n                        <MDBNavbarNav right>\n                            <MDBNavItem>\n                                <MDBNavLink className=\"waves-effect waves-light black-text\" to=\"#!\">\n                                <MDBIcon icon=\"user\" className=\"mr-1\" />About</MDBNavLink>\n                            </MDBNavItem>\n                            <MDBNavItem>\n                                <MDBNavLink className=\"waves-effect waves-light black-text\" to=\"#!\">\n                                <MDBIcon icon=\"envelope\" className=\"mr-1\" />Contact</MDBNavLink>\n                            </MDBNavItem>\n                            <MDBNavItem>\n                                <MDBDropdown>\n                                    <MDBDropdownToggle nav caret className=\"black-text\">\n                                        <MDBIcon icon=\"folder-open\" className=\"mr-1\" />Portfolio\n                                    </MDBDropdownToggle>\n                                    <MDBDropdownMenu className=\"dropdown-default\" right>\n                                        <MDBDropdownItem href=\"#!\">Design . Web</MDBDropdownItem>\n                                        <MDBDropdownItem href=\"#!\">Residential Designs</MDBDropdownItem>\n                                        <MDBDropdownItem href=\"#!\">ArchViz</MDBDropdownItem>\n                                        <MDBDropdownItem href=\"#!\">Photography</MDBDropdownItem>\n                                    </MDBDropdownMenu>\n                                </MDBDropdown>\n                            </MDBNavItem>\n                        </MDBNavbarNav>\n                    </MDBCollapse>\n                </MDBNavbar>\n            </Router>\n            \n        );\n    }\n}\n\nexport default NavbarPage;","import React from \"react\";\nimport { MDBContainer, MDBRow, MDBFooter, MDBIcon, MDBNavItem, MDBNavLink } from \"mdbreact\";\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nconst FooterPage = () => {\n  return (\n    <MDBFooter color=\"white\" className=\"font-small pt-4 mt-4\">\n      <MDBContainer fluid className=\"text-center text-md-left\">\n        <MDBRow>\n            <h5 className=\"title black-text\">Connect with me on:</h5>\n            <Router>\n                <MDBNavItem>\n                <MDBNavLink className=\"waves-effect waves-light black-text\" to=\"#!\">\n                <MDBIcon icon=\"https://www.facebook.com/arjae.sanjose/\" href=\"https://www.facebook.com/arjae.sanjose/\" target=\"_blank\" className=\"mr-1\" /></MDBNavLink>\n                <MDBNavLink className=\"waves-effect waves-light black-text\" to=\"#!\">\n                <MDBIcon icon=\"linkedin-in\" href=\"https://www.facebook.com/arjae.sanjose/\" target=\"_blank\" className=\"mr-1\" /></MDBNavLink>\n                <MDBNavLink className=\"waves-effect waves-light black-text\" to=\"#!\">\n                <MDBIcon icon=\"linkedin-in\" href=\"https://www.facebook.com/arjae.sanjose/\" target=\"_blank\" className=\"mr-1\" /></MDBNavLink>\n            </MDBNavItem>\n            {/* <ul>\n              <li className=\"list-unstyled\">\n                <a className=\"black-text\" href=\"#!\">Link 1</a>\n              </li>\n              <li className=\"list-unstyled\">\n                <a className=\"black-text\" href=\"#!\">Link 2</a>\n              </li>\n              <li className=\"list-unstyled\">\n                <a className=\"black-text\" href=\"#!\">Link 3</a>\n              </li>\n              <li className=\"list-unstyled\">\n                <a className=\"black-text\" href=\"#!\">Link 4</a>\n              </li>\n            </ul> */}\n            </Router>\n            \n        </MDBRow>\n      </MDBContainer>\n      <div className=\"footer-copyright text-center py-3\">\n        <MDBContainer fluid>\n          &copy; {new Date().getFullYear()} Copyright: <a href=\"https://www.mdbootstrap.com\"> MDBootstrap.com </a>\n        </MDBContainer>\n      </div>\n    </MDBFooter>\n  );\n}\n\nexport default FooterPage;","import React, { Component } from \"react\";\r\nimport CarouselPage from \"./components/Carousel\"\r\nimport NavbarPage from \"./components/Navbar\"\r\nimport FooterPage from \"./components/Footer\"\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <NavbarPage />\r\n        <CarouselPage />\r\n        <FooterPage />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render( < App / > , document.getElementById('root'));\r\n\r\nregisterServiceWorker();"],"sourceRoot":""}